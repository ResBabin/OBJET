<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC
"-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="objetMapper">
<!-- 오브제 전체 리스트   -->
<select id="selectObjetAll" resultType="Objet">
 select objetno, userid, objettitle, objetintro, originmainposter, renamemainposter, objetstartdate, objetenddate, objettag, publicyn, objetregidate, objetstatus, objetview 
 from objet
 where objetstatus = 'OPEN' and publicyn = 'Y' or objetstatus = 'STANDBY' 
 order by objetstartdate desc
 </select>
 
 <!-- 작가 전체 리스트   -->
<select id="selectArtistAll" resultType="Artist">
select distinct userid, usertype, username, nickname, quityn, blackyn, useropic, userrpic,
userintros, userintrol, usertag, portfolio, objetstatus, originmainposter, renamemainposter, objettag
from (select a.userid, a.usertype, a.username, a.nickname, a.quityn, a.blackyn, b.useropic, b.userrpic, b.userintros, b.userintrol, b.usertag, b.portfolio, 
c.objetstatus, c.originmainposter, c.renamemainposter, c.objettag from users a
join usersprofile b on a.userid = b.userid
left outer join objet c on a.userid = c.userid
where quityn = 'N' and blackyn = 'N')
order by objetstatus asc
</select>
<!-- 작가 전체 리스트 정렬  -->
<select id="selectArtistListOrder" resultType="Artist" parameterType="string">
select distinct userid, usertype, username, nickname, quityn, blackyn, useropic, userrpic,
userintros, userintrol, usertag, portfolio, objetstatus, originmainposter, renamemainposter, objettag
from (select a.userid, a.usertype, a.username, a.nickname, a.quityn, a.blackyn, b.useropic, b.userrpic, b.userintros, b.userintrol, b.usertag, b.portfolio, 
c.objetstatus, c.originmainposter, c.renamemainposter, c.objettag from users a
join usersprofile b on a.userid = b.userid
left outer join objet c on a.userid = c.userid
where quityn = 'N' and blackyn = 'N')
<trim prefix="order by">
<if test="_parameter=='statusasc'"> objetstatus asc</if>
<if test="_parameter=='nameasc'"> nickname asc</if>
</trim>
</select>
 
<!-- 오브제 검색 결과 리스트(전시/작가)  -->
<select id="objetSearchList" resultType="Objet">
 select * from objet where objettitle like '%' || #{objettitle} || '%' or objetintro like #{objetintro} order by #{objetstartdate} asc
</select>
<select id="artistSearchList" resultType="Artist">
 select * form objet a join users b on a.userid = b.userid where a.userid like '%' || #{userid} || '%' or nickname like '%' || #{nickname} || '%' order by #{objetstartdate} asc
</select> 
 
 <!-- 오브제 하나   -->
 <select id="selectObjetOne" resultType="Artist">
 select * from objet a
 join usersprofile b on a.userid = b.userid
 join users c on a.userid = c.userid
 where objetno = #{objetno}
 </select>
 
 <!-- 전시 신고 -->
 <insert id="insertObjetReport" parameterType="ReportBoard">
 	insert into reportboard values 
 	(#{originno}, #{reportedb}, #{reporterb}, #{reportbtype}, sysdate, #{reportbreason}) 
 </insert>
 
 <!-- 한줄평 리스트  -->
 <select id="selectReview" resultType="Review">
 select a.userid, a.objetno, a.revcontent, a.revstars, a.revgood, a.revhate, a.revdate, b.userrpic, c.nickname
 from review a
 join usersprofile b on a.userid = b.userid
 join users c on a.userid = c.userid
 where a.objetno = #{objetno}
 order by a.revdate desc
 </select>
 
 <!-- 한줄평 리스트 정렬  -->
  <!-- <select id="selectReview" resultType="Review">
 select * from review order by revdate desc
 </select> -->
 
 <!-- 내 한줄평 -->
 <select id="selectReviewOne" resultType="Review">
 select a.userid, a.objetno, a.revcontent, a.revstars, a.revgood, a.revhate, a.revdate, b.userrpic, c.nickname
 from review a
 join usersprofile b on a.userid = b.userid
 join users c on a.userid = c.userid
 where a.userid = #{userid} and a.objetno = #{objetno}
 order by a.revdate desc
 </select>
 
<!-- 한줄평 등록 -->
<insert id="insertReview" parameterType="Review">
	insert into review values ( #{userid}, #{objetno}, #{revcontent}, #{revstars}, #{revgood}, #{revhate}, #{revdate}) 
</insert>
<!-- 한줄평 수정 -->
<update id="updateReview" parameterType="Review">
	update review set revcontent = #{revcontent}, revstars = #{revstars}, revgood = #{revgood}, revhate = #{revhate}, revdate = #{revdate} where userid = #{userid}
</update>
<!-- 한줄평 삭제 -->
<delete id="deleteReview" parameterType="Review">
	delete from review where userid = #{userid} 
</delete>
<!-- 한줄평 신고 -->
 <insert id="insertReviewReport" parameterType="ReportBoard">
 	insert into reportboard values ( #{originno}, #{reportedb}, #{reporterb}, sysdate, #{reportreason}, #{reportbtype}) 
 </insert>
 
 
 
 <!-- 최민영 *************************** -->
 	<select id="selectArtistObjetGetListCount" parameterType="string" resultType="int">
 		select count(*) from objet where userid = #{userid} and objetstatus in ('STANDBY', 'OPEN', 'CLOSE')
 	</select>
 
	 <select id="selectArtistObjetList" parameterType="hashmap" resultType="objet">
	 	select * from (
	 	select rownum rnum, objetno, userid, objettitle, objetintro, originmainposter, renamemainposter, objetstartdate, objetenddate, objettag, publicyn, objetregidate, objetstatus, objetview
		from (select objetno, userid, objettitle, objetintro, originmainposter, renamemainposter,objetstartdate, objetenddate, objettag, publicyn, objetregidate, objetstatus, objetview from objet
		where userid = #{userid} and objetstatus in ('STANDBY', 'OPEN', 'CLOSE') order by case when objetstatus = 'open' then 0 end)) <![CDATA[ where rnum between #{startRow} and #{endRow} ]]>
	 </select>
 
</mapper>
