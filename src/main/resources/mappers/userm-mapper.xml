<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC
"-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="usermMapper">
	
	<select id="selectUsers" resultType="Userm">
		select userid, nickname, username, blackyn, 	enrolldate, quityn, count(reportedu) as "reportcount" from users
		left join reportudetail on (userid = reportedu) 
		where userid not like '%admin%'
		group by userid, nickname, username, blackyn, enrolldate, quityn 
		order by userid
	</select>
	
	<select id="selectBlacklist" resultType="Userm">
		select * from blacklist
		join users using (userid)
		order by userid
	</select>
	
	<select id="selectUserDetail" resultType="Userm" parameterType="string">
		select * from users
		left join usersprofile using (userid)
		where userid = #{value}
	</select>
	
	<select id="selectUserObjet" resultType="com.kh.objet.objet.model.vo.Objet" parameterType="string">
		select * from objet
		where userid = #{value}
	</select>
	
	<select id="selectUserReport" resultType="com.kh.objet.reportudetail.model.vo.ReportUDetail" parameterType="string">
		select  * from reportudetail
		where reportedu = #{value}
	</select>
	
	<select id="selectUserReportTotal" resultType="com.kh.objet.reportudetail.model.vo.ReportUDetail" parameterType="string">
		select count(*) as "reportucount", reportureason
		from reportudetail
		where reportedu = #{value}
		group by reportureason
	</select>
	
	<!-- 
	<select id="getListCount" resultType="_int">
		select count(*) from board
	</select>
	
	<select id="selectBoard" parameterType="int" resultMap="resultBoard">
		select * from board 
		where board_num = #{boardNum}
	</select>	
	
	<select id="selectList" parameterType="com.kh.first.board.model.vo.BoardPage" resultMap="resultBoard">
		<![CDATA[
		select * 
		from (select rownum rnum, board_num, 
				   board_title, board_writer, board_content, 
				   board_original_filename, board_rename_filename,
				   board_date, board_readcount, board_reply_lev,
				   board_ref, board_reply_ref, board_reply_seq 
			  from (select * 
			  		from board 
			  		order by board_ref desc, 
			  				board_reply_ref desc, 
			  				board_reply_lev asc, 
			  				board_reply_seq asc)) 
		where rnum >= #{startRow} and rnum <= #{endRow}
		]]>
	</select>
	
	<insert id="insertBoard" parameterType="Board" >
		insert into board 
		values ((select max(board_num) + 1 from board), 
				#{boardWriter}, #{boardTitle}, #{boardContent}
				<if test="boardOriginalFileName != null">
				, #{boardOriginalFileName}, #{boardRenameFileName}
				</if>
				<if test="boardOriginalFileName == null">
				, null, null
				</if>
				, (select max(board_num) + 1 from board), 
				null, 1, null, default, default)
	</insert>
	
	<insert id="insertReply1" parameterType="Board">
		insert into board 
		values ((select max(board_num) + 1 from board), 
				#{boardWriter}, #{boardTitle}, 
				#{boardContent}, NULL, NULL, 
				#{boardRef}, 
				(select max(board_num) + 1 from board),
				2, #{boardReplySeq}, 0, default)
	</insert>
	
	<insert id="insertReply2" parameterType="Board">
		insert into board 
		values ((select max(board_num) + 1 from board), 
		#{boardWriter}, #{boardTitle}, #{boardContent}, 
		NULL, NULL, #{boardRef}, #{boardReplyRef}, 3, 
		#{boardReplySeq}, 0, default)
	</insert>
	
	<delete id="deleteBoard" parameterType="int">
		delete from board 
		where board_num = #{boardNum}
	</delete>
	
	<update id="addReadCount" parameterType="int">
		update board 
		set board_readcount = board_readcount + 1 
		where board_num = #{boardNum}
	</update>
	
	<update id="replySeq" parameterType="Board" >
		update board 
		set board_reply_seq = board_reply_seq + 1 
		where board_ref = #{boardRef} 
		and board_reply_lev = #{boardReplyLev} 
		and board_reply_ref = #{boardReplyRef}		
	</update>
	
	<update id="updateReply" parameterType="Board">
		update board 
		set board_title = #{boardTitle}, 
		board_content = #{boardContent}
		where board_num = #{boardNum}
	</update>
	
	<update id="updateBoard" parameterType="Board">
		update board 
		set board_title = #{boardTitle}, 
			board_content = #{boardContent}, 
			BOARD_ORIGINAL_FILENAME = #{boardOriginalFileName}, 
			BOARD_RENAME_FILENAME = #{boardRenameFileName} 
		where board_num = #{boardNum}
	</update>
	
	<select id="selectReplySeq" parameterType="Board" resultType="_int">
		select max(board_reply_seq) from board 
		where board_reply_lev = #{boardReplyLev} 
		<if test="boardReplyRef > 0">
		and board_reply_ref = #{boardReplyRef}
		</if>
	</select>
	
	<select id="countReply" parameterType="Board" resultType="_int">
	select count(*) from board 
	where board_ref = #{boardRef} and board_reply_lev = #{boardReplyLev} 
	<if test="boardReplyLev > 1">
		and board_reply_ref = #{boardReplyRef}
	</if>
	</select> -->

</mapper>
